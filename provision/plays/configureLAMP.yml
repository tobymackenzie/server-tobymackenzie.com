- name: configure apache
  become: true
  handlers:
    - name: restart apache
      service:
        name: apache2
        state: restarted
  hosts: all
  tasks:
    - name: check which sites have certs installed
      stat:
        path: '/etc/letsencrypt/live/{{item.key}}'
      register: enabledLetsEncryptStats
      when: item.value.https is defined and item.value.https
      with_dict: '{{sites}}'
    ##--make letsencrypt cert installed check easier to use in templates
    - name: format letsencrypt cert data for consumption
      set_fact:
        letsEncryptSiteStatus: '{{letsEncryptSiteStatus|default({})|combine({item.item.key: item.stat.exists})}}'
      when: item.stat is defined
      with_items: '{{enabledLetsEncryptStats.results}}'
    - name: configure vhost log format
      lineinfile:
        dest: /etc/apache2/apache2.conf
        line: 'LogFormat "%V:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined'
        regexp: '^LogFormat.*vhost_combined$'
        state: present
      register: _apacheConfVhostLogResult
    - name: enable mod_headers
      apache2_module:
        name: headers
        state: present
      register: _apacheConfHeadersEnabledResult
    - name: enable mod_rewrite
      apache2_module:
        name: rewrite
        state: present
      register: _apacheConfRewriteEnabledResult
    - name: enable mod_ssl
      apache2_module:
        name: ssl
        state: present
      register: _apacheConfSSLEnabledResult
    - name: mod_ssl conf
      copy:
        dest: /etc/apache2/mods-available/ssl.conf
        src: ../../assets/etc/apache2/mods-available/ssl.conf
      register: _apacheConfSSLConfResult
    - name: create apache inc directory
      file:
        path: /etc/apache2/inc
        state: directory
    - name: create site inc conf files
      template:
        dest: /etc/apache2/inc/{{item.key}}.conf
        src: ../../assets/etc/apache2/inc/site.conf.j2
      register: _apacheConfIncResult
      with_dict: '{{ sites }}'
    - name: determine inc file paths
      set_fact:
        apacheIncUsedFiles: '{{_apacheConfIncResult.results|selectattr("invocation", "defined")|map(attribute="invocation.module_args.dest")|list}}'
    - name: get list of all site inc conf files
      find:
        paths: /etc/apache2/inc/
        patterns: '*.conf'
      register: allApacheIncFiles
    - name: determine unneeded site inc files
      set_fact:
        unneededApacheIncFiles: '{{allApacheIncFiles.files|map(attribute="path")|difference(apacheIncUsedFiles)}}'
    - name: remove unneeded site inc files
      file:
        path: '{{item}}'
        state: absent
      with_items: '{{unneededApacheIncFiles}}'
    - name: create apache vhosts
      template:
        dest: /etc/apache2/sites-enabled/{{(item.key == defaultSite | default('')) | ternary('0-','')}}{{item.key}}.conf
        src: ../../assets/etc/apache2/sites-enabled/site.conf.j2
      register: _apacheConfVhostsResult
      with_dict: '{{sites}}'
    - name: determine vhost file paths
      set_fact:
        apacheVhostUsedFiles: '{{_apacheConfVhostsResult.results|selectattr("invocation", "defined")|map(attribute="invocation.module_args.dest")|list}}'
    - name: get list of all vhost conf files
      find:
        paths: /etc/apache2/sites-enabled/
        patterns: '*.conf'
      register: allApacheVhostFiles
    - name: determine unneeded site vhost files
      set_fact:
        unneededApacheVhostFiles: '{{allApacheVhostFiles.files|map(attribute="path")|difference(apacheVhostUsedFiles)}}'
    - name: remove unneeded site vhost files
      file:
        path: '{{item}}'
        state: absent
      with_items: '{{unneededApacheVhostFiles}}'
    - name: restart apache
      command: 'apachectl configtest'
      when: _apacheConfHeadersEnabledResult.changed or _apacheConfRewriteEnabledResult.changed or _apacheConfSSLEnabledResult.changed or _apacheConfSSLConfResult or _apacheConfDefaultSiteResult.changed or _apacheConfIncResult.changed or _apacheConfVhostLogResult or _apacheConfVhostsResult.changed
      notify: restart apache
- name: configure mysql
  become: true
  hosts: all
  tasks:
    - name: set root mysql password
      mysql_user:
        name: root
        password: '{{dbRootPassword}}'
        state: present
    - name: add root my.cnf for future logins
      template:
        dest: /root/.my.cnf
        mode: 0600
        src: ../../assets/root/.my.cnf
